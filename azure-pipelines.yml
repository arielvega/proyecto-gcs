# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- none

pool:
  vmImage: ubuntu-latest

steps:

- task: JavaToolInstaller@0
  inputs:
    versionSpec: '8'
    jdkArchitectureOption: 'x64'
    jdkSourceOption: 'PreInstalled'

- task: Bash@3

  inputs:
    targetType: 'inline'
    script: |
      echo 'Preparar ambiente'
      sudo apt -y update
      sudo apt -y install curl
      echo "deb https://dl.bintray.com/sbt/debian /" | sudo tee -a /etc/apt/sources.list.d/sbt.list
      sudo apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv 2EE0EA64E40A89B84B2DF73499E82A75642AC823
      sudo curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg
      sudo apt -y update
      sudo apt -y install sbt git debianutils rpm ssh postgresql-client-common
      echo 'Compilando app'
      git clone https://github.com/arielvega/proyecto-gcs
      cd proyecto-gcs
      sbt compile
      echo 'app  Compilada'
      echo 'Ejecutando pruebas unitarias'
      sbt test
      echo 'Pruebas unitarias ejecutadas'
      echo 'Ejecutando pruebas de integracion'
      sudo systemctl start docker
      sudo docker run -d -e POSTGRES_PASSWORD=gcs -e POSTGRES_USER=gcs -e POSTGRES_DB=gcs -p 127.0.0.1:5432:5432 postgres:9.5
      export PGPASSWORD='gcs'
      until psql -h "127.0.0.1" -U "gcs" -c '\l'; do
        >&2 echo "Database no esta lista - esperando..."
        sleep 1
      done
      >&2 echo "Database lista! ;)"
      sudo bash -c "echo '127.0.0.1    dbserver' >> /etc/hosts"
      sbt "project gcsAppIT" test
      echo 'Pruebas de integracion ejecutadas'
      echo 'Empaquetando'
      sbt rpm:packageBin
      mv $(Agent.BuildDirectory)/s/proyecto-gcs/gcs-app/target/rpm/RPMS/noarch/gcs-app-2.8.x-1.noarch.rpm ~/gcs-app-2.8.x-1.noarch.rpm
      echo 'Empaquetado'
      echo 'Desplegar'
      mkdir ~/.ssh
      echo $(PIPELINES_SSH_KEY) | base64 -di > ~/.ssh/id_rsa
      sudo chmod 600 ~/.ssh/id_rsa
      ssh -o "StrictHostKeyChecking no" azureuser@$(WEBSERVER_PUBLIC_IP) "sudo sed -i '/dbserver/d' /etc/hosts"
      ssh -o "StrictHostKeyChecking no" azureuser@$(WEBSERVER_PUBLIC_IP) "sudo bash -c \"echo '$(DATABASE_LOCAL_IP)    dbserver' >> /etc/hosts\""
      scp -o "StrictHostKeyChecking no" ~/gcs-app-2.8.x-1.noarch.rpm azureuser@$(WEBSERVER_PUBLIC_IP):.
      ssh -o "StrictHostKeyChecking no" azureuser@$(WEBSERVER_PUBLIC_IP) "sudo dnf install -y ~/gcs-app-2.8.x-1.noarch.rpm"
      
